name: Build Release (CPU)

on: workflow_dispatch

permissions:
  contents: write

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Update llama-cpp Submodule
        run: |
          git submodule update --init --recursive --remote

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          activate-environment: true
          
      - name: Install dependencies for Linux
        working-directory:  ./vendor/llama-cpp-python
        run: |
          uv sync --active --extra all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.1
        env:
          CIBW_SKIP: "*musllinux* pp*"
          CIBW_REPAIR_WHEEL_COMMAND: ""
          CIBW_BUILD: "cp310-* cp312-*" # cp311-* cp312-*
        with:
          package-dir: ./vendor/llama-cpp-python
          output-dir: ./wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  # build_wheels_arm64:
  #   name: Build arm64 wheels
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: "recursive"

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #       with:
  #         platforms: linux/arm64
          
  #     - name: Build wheels
  #       uses: pypa/cibuildwheel@v2.22.0
  #       env:
  #         CIBW_SKIP: "*musllinux* pp*" 
  #         CIBW_REPAIR_WHEEL_COMMAND: ""
  #         CIBW_ARCHS: "aarch64"
  #         CIBW_BUILD: "cp312-*" # cp311-* cp312-*
  #         CIBW_BEFORE_BUILD: "CMAKE_ARGS='-DGGML_NATIVE=OFF -DGGML_CPU_ARM_ARCH=generic'"
  #       with:
  #         package-dir: ./vendor/llama-cpp-python
  #         output-dir: ./wheelhouse

  #     - name: Upload wheels as artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels_arm64
  #         path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          activate-environment: true

      - name: Install dependencies for Linux
        working-directory:  ./vendor/llama-cpp-python
        run: |
          uv add --active build
          uv sync --active --extra all
        shell: bash

      - name: Build source distribution
        working-directory: ./vendor/llama-cpp-python
        run: |
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path:  ./vendor/llama-cpp-python/dist/*.tar.gz

  release:
    name: Release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          # Set tag_name to <tag>-cpu
          tag_name: ${{ github.ref_name }}-cpu
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
